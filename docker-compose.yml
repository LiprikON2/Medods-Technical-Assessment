name: backend

services:
    auth:
        image: cosmtrek/air
        # working_dir value has to be the same of mapped volume
        working_dir: /auth
        ports:
            - 8080:8080
        environment:
            # Server
            - PORT=8080
            # Postgres
            - POSTGRES_DATABASE=auth
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            # SMTP
            - SMTP_FROM=${SMTP_FROM}
            - SMTP_PASSWORD=${SMTP_PASSWORD}
            - SMTP_HOST=${SMTP_HOST}
            - SMTP_PORT=${SMTP_PORT}
            - SMTP_TSL_INSECURE_SKIP_VERIFY=${SMTP_TSL_INSECURE_SKIP_VERIFY}
            # JWT
            - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
        volumes:
            - ./auth/:/auth/
        depends_on:
            db:
                condition: service_healthy

    db:
          image: postgres:latest
          volumes:
              - pgdata:/var/lib/postgresql/data # Persists PostgreSQL data
          environment:
              POSTGRES_DB: auth
              POSTGRES_USER: ${POSTGRES_USER}
              POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
          # Makes possible `condition: service_healthy` check
          healthcheck:
              test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "$POSTGRES_USER" ]
              interval: 30s
              timeout: 60s
              retries: 5
              start_period: 80s  
          # (optional) Exposes database to the host machine
          ports:
              - '15432:5432' # host:container

volumes:
    pgdata: